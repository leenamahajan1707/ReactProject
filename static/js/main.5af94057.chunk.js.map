{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","placeholder","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","console","log","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","split","reverse","join","document","getElementById","select","navigator","clipboard","writeText","length","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","defaultProps","aboutText","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5af94057.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n      {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n      <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n            {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n          </li>\r\n          {/* <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n          </li> */}\r\n        </ul>\r\n        <form className=\"d-flex\">\r\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n          <button className=\"btn btn-success\" type=\"submit\">Search</button>\r\n        </form>\r\n        <div className={`form-check form-switch text-${props.mode === 'light'?'dark':'light'} mx-2`}>\r\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{props.mode === 'light'?'Enable dark mode':'Enable light mode'}</label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {title: PropTypes.string.isRequired,\r\n                    aboutText: PropTypes.string\r\n                }\r\n\r\nNavbar.defaultProps = {\r\n    title:'Hello prop',\r\n    aboutText:'text'\r\n    }\r\n","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const handleUpClick = () =>{\r\n        console.log(\"Uppercase clicked \"+ text)\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to upperCase\",\"success\")\r\n    }\r\n\r\n    const handleLowClick = () =>{\r\n        console.log(\"lowerCase clicked \"+ text)\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to LoweCase\",\"success\")\r\n    }\r\n\r\n    const handleClearClick = () =>{\r\n        console.log(\"ClearText clicked \"+ text)\r\n        let newText = '';\r\n        setText(newText)\r\n    }\r\n    const handleReverseClick = () =>{\r\n        console.log(\"ReverseCase clicked \"+ text)\r\n        let newText = text.split(\"\").reverse().join(\"\");\r\n        setText(newText)\r\n    }\r\n\r\n    const handleCopy = () =>{\r\n        var text = document.getElementById(\"myBox\")\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n    }\r\n\r\n    const handleExtraSpaces = () =>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n    }\r\n\r\n    const handleOnChange = (event) =>{\r\n        console.log(\"OnChange clicked \")\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const [text, setText] = useState('');\r\n    // setText(\"gfjhgeyhkjh\")     //correct way to change text\r\n    //text = \"new text\"   //wrong way\r\n    return (\r\n        <>\r\n        <div className=\"container\" style = {{color: props.mode === 'dark'?'white':'black'}}>\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" value={text} onChange={handleOnChange} style = {{backgroundColor: props.mode === 'dark'?'grey':'white', color: props.mode === 'dark'?'white':'black'}} id=\"myBox\" rows=\"3\"></textarea>\r\n            </div>  {/* {{}} one for writing js and another for writing object  */}\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>Convert to UpperCase</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleLowClick}>Convert to LowerCase</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleClearClick}>Clear Text</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleReverseClick}>convert to Reverse Text</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleCopy}>copy Text</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleExtraSpaces}>remove extra spaces</button>\r\n        </div>\r\n        <div className=\"container my-3\" style = {{color: props.mode === 'dark'?'white':'black'}}>\r\n            <h2>Text Summary</h2>\r\n            <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n            <p>{0.008 * text.split(\" \").length} minutes read</p>\r\n            <h2> Preview</h2>\r\n            <p>{text.length>0?text:\"enter to preview\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word) =>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        \r\n           props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n            </div>\r\n       \r\n    )\r\n}\r\n","\nimport './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light') //whether dark mode is enabled or not\n  const [alert, setAlert] = useState(null) //whether dark mode is enabled or not\n\n  const showAlert = (message,type) =>{\n    setAlert({\n      msg: message,\n      type:type\n    })\n    setTimeout(() =>{\n      setAlert(null);\n    },1500)\n  }\n\n  const toggleMode =  () =>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = 'grey';\n      showAlert(\"Dark Mode Has been enabled\",\"success\")\n      document.title = 'TextUtils -Dark Mode';\n    }\n    else{     \n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light Mode Has been enabled\",\"success\")\n      document.title = 'TextUtils -Light Mode';\n    }\n\n  }\n\n  return (\n    <>\n    {/* <Router> */}\n\n     <Navbar title=\"TextUtils\" aboutText=\"About\" mode={mode} toggleMode = {toggleMode}/>\n     <Alert alert ={alert}/>\n     <div className=\"container my-3\">\n     {/* <Switch>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n           <Route exact path=\"/\">    react will do exact matching with exact keyword otherwise it will do partial matching */}\n            <TextForm showAlert = {showAlert} heading=\"Enter the text to analyze below\"  mode={mode}/>\n          {/* </Route>\n      </Switch> */}\n    </div>\n    {/* </Router> */}\n    </>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}